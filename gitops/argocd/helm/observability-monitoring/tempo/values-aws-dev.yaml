tempo-distributed:
  global:
    clusterDomain: 'cluster.local'
  gateway:
    enabled: true
    # Basic auth configuration
    basicAuth:
      # -- Enables basic authentication for the gateway
      enabled: true
      # -- The basic auth username for the gateway
      username: tempo-admin
      # -- The basic auth password for the gateway
      password: asderftgyhfwit
      # -- Uses the specified username and password to compute a htpasswd using Sprig's `htpasswd` function.
      # The value is templated using `tpl`. Override this to use a custom htpasswd, e.g. in case the default causes
      # high CPU load.
      htpasswd: >-
        {{ htpasswd (required "'gateway.basicAuth.username' is required" .Values.gateway.basicAuth.username) (required "'gateway.basicAuth.password' is required" .Values.gateway.basicAuth.password) }}
      # -- Existing basic auth secret to use. Must contain '.htpasswd'
      existingSecret: null

  # -- The supported storage backends are gcs, s3 and azure, as specified in https://grafana.com/docs/tempo/latest/configuration/#storage
  storage:
    trace:
      backend: s3
      s3:
        bucket: <bucket_name>
        region: 'us-east-1'
        endpoint: 's3.us-east-1.amazonaws.com'
        insecure: true

  traces:
    # -- Enable Tempo to ingest Open Telemetry traces
    otlp:
      http:
        enabled: true
      grpc:
        enabled: true

  # Configuration for the ingester
  ingester:
    # -- Annotations for the ingester StatefulSet
    annotations: {}
    # -- Number of replicas for the ingester
    replicas: 2   

  # Configuration for the distributor
  distributor:
    config:
      log_received_spans:
        enabled: true
        
  serviceAccount:
    # -- Specifies whether a ServiceAccount should be created
    create: true
    # -- The name of the ServiceAccount to use.
    # If not set and create is true, a name is generated using the fullname template
    name: tempo
    # -- Image pull secrets for the service account
    imagePullSecrets: []
    # -- Annotations for the service account
    annotations: 
          eks.amazonaws.com/role-arn: arn:aws:iam::<Account ID>:role/<Role Name>

  # Configuration for the metrics-generator
  metricsGenerator:
    # -- Specifies whether a metrics-generator should be deployed
    enabled: true

    # -- More information on configuration: https://grafana.com/docs/tempo/latest/configuration/#metrics-generator
    config:
      registry:
        collection_interval: 15s
        external_labels: {}
        stale_duration: 15m
      processor:
        service_graphs:
          # -- Additional dimensions to add to the metrics. Dimensions are searched for in the
          # -- resource and span attributes and are added to the metrics if present.
          dimensions: []
          histogram_buckets: [0.1, 0.2, 0.4, 0.8, 1.6, 3.2, 6.4, 12.8]
          max_items: 10000
          wait: 10s
          workers: 10
        span_metrics:
          # -- Additional dimensions to add to the metrics along with the default dimensions.
          # -- Dimensions are searched for in the resource and span attributes and are added to the metrics if present.
          dimensions: []
          histogram_buckets: [0.002, 0.004, 0.008, 0.016, 0.032, 0.064, 0.128, 0.256, 0.512, 1.02, 2.05, 4.10]
      storage:
        path: /var/tempo/wal
        wal:
        remote_write_flush_deadline: 1m
        # -- A list of remote write endpoints.
        # -- https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_write
        remote_write: 
        - url: http://mimir-nginx.tempo.svc:80/api/v1/push
          headers:
            "X-Scope-OrgID": non-prod
          basic_auth:
            username: grafana-mimir
            password: supersecret
